{"version":3,"sources":["utils/getFromLocalStorage.ts","utils/setToLocalStorage.ts","context/UserContext.tsx","components/NavigationLink/NavigationLink.tsx","components/AuthNav/AuthNav.tsx","components/Container/Container.tsx","components/SearchQuery/SearchQuery.tsx","components/UserNav/UserNav.tsx","components/Header/Header.tsx","Pages/HomePage/HomePage.tsx","Pages/RegistrationPage/RegistrationPage.tsx","Pages/LoginPage/LoginPage.tsx","api/images.ts","components/GalleryItem/GalleryItem.tsx","components/Modal/Modal.tsx","components/Gallery/Gallery.tsx","Pages/GalleryPage/GalleryPage.tsx","Pages/FavoritePage/FavoritePage.tsx","Pages/NotFoundPage/NotFoundPage.tsx","components/ProtectedRoute/ProtectedRoute.tsx","App.tsx","index.tsx"],"names":["getFromLocalStorage","key","usersPreview","localStorage","getItem","JSON","parse","setToLocalStorage","data","setItem","stringify","UserContext","createContext","user","setUser","UserProvider","children","useState","useEffect","Provider","value","NavigationLink","to","title","className","isActive","cn","AuthNav","useContext","console","log","username","type","onClick","removeItem","Container","SearchQuery","useSearchParams","searchParams","setSearchParams","placeholder","onChange","e","target","set","delete","UserNav","Header","isLocation","useLocation","pathname","HomePage","RegistrationPage","navigate","useNavigate","useForm","register","handleSubmit","errors","formState","onSubmit","users","find","email","alert","htmlFor","required","password","LoginPage","findUser","API_KEY","process","BASE_URL","getRandomPhotos","a","page","query","fetchURL","fetch","json","photos","map","photo","id","alt_description","created_at","description","urls","regular","thumb","GalleryItem","handleImage","handleFavorite","src","alt","Modal","onClose","modalImage","keyDownClose","code","window","addEventListener","removeEventListener","ReactDOM","createPortal","currentTarget","style","width","height","document","querySelector","Gallery","modal","setModal","setModalImage","userPhotos","setUserPhotos","handleActive","handlerFavorite","image","findDublicat","el","length","duration","columnWidth","gutterWidth","gutterHeight","component","GalleryPage","setPhotos","setPage","hasMore","setHasMore","searchQuery","setsearchQuery","get","fetchMorePhotos","prevPhotos","prevPage","delayInputTimeoutId","setTimeout","clearTimeout","overflow","dataLength","next","loader","FavoritePage","NotFoundPage","ProtectedRoute","App","path","element","replace","render","getElementById"],"mappings":"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","file":"static/js/main.2088a56a.chunk.js","sourcesContent":["export const getFromLocalStorage = (key: string) => {\n  const usersPreview = localStorage.getItem(key);\n\n  if (usersPreview === null) {\n    return false;\n  }\n\n  const users = JSON.parse(usersPreview);\n\n  return users;\n};\n","export const setToLocalStorage = <T>(\n  key: string,\n  data: T,\n) => {\n  localStorage.setItem(key, JSON.stringify(data));\n};\n","import React, { createContext, useEffect, useState } from 'react';\nimport { UserRegister } from '../types/User';\nimport { getFromLocalStorage } from '../utils/getFromLocalStorage';\nimport { setToLocalStorage } from '../utils/setToLocalStorage';\n\ntype Props = {\n  children: React.ReactNode;\n};\n\ntype UserContextType = {\n  user: UserRegister | null;\n  setUser: (user: UserRegister | null) => void;\n};\n\nexport const UserContext = createContext<UserContextType>({\n  user: null,\n  setUser: () => null,\n});\n\nexport const UserProvider: React.FC<Props> = ({ children }) => {\n  const [user, setUser] = useState<UserRegister | null>(\n    () => getFromLocalStorage('activeUser') || null,\n  );\n\n  useEffect(() => {\n    setToLocalStorage('activeUser', user);\n  }, [user]);\n\n  return (\n    <UserContext.Provider\n      value={{\n        user,\n        setUser,\n      }}\n    >\n      {children}\n    </UserContext.Provider>\n  );\n};\n","import React from 'react';\nimport cn from 'classnames';\nimport { NavLink } from 'react-router-dom';\nimport './NavigationLink.scss';\n\ntype Props = {\n  to: string;\n  title: string;\n};\n\nexport const NavigationLink: React.FC<Props> = ({ to, title }) => (\n  <NavLink\n    className={({ isActive }) => cn('nav-link', {\n      isActive,\n    })}\n    to={to}\n  >\n    {title}\n  </NavLink>\n);\n","import React, { useContext } from 'react';\nimport { NavigationLink } from '../NavigationLink/NavigationLink';\nimport { UserContext } from '../../context/UserContext';\nimport './AuthNav.scss';\n\nexport const AuthNav: React.FC = () => {\n  const { user, setUser } = useContext(UserContext);\n  const handleLogout = () => {\n    localStorage.removeItem('activeUser');\n    setUser(null);\n  };\n\n  console.log('user===>', user);\n\n  return (\n    <div className=\"auth-nav\">\n      {!user && <NavigationLink to=\"/login\" title=\"Login\" />}\n      {!user && <NavigationLink to=\"/register\" title=\"Register\" />}\n      {user && `Hi, ${user.username}`}\n      {user && (\n        <button\n          className=\"logout-btn\"\n          type=\"button\"\n          onClick={() => handleLogout()}\n        >\n          Logout\n        </button>\n      )}\n    </div>\n  );\n};\n","import React from 'react';\nimport './Container.scss';\n\ntype Props = {\n  children: React.ReactNode;\n};\n\nexport const Container: React.FC<Props> = ({ children }) => {\n  return <div className=\"container\">{children}</div>;\n};\n","import React, { ChangeEvent } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport './SearchQuery.scss';\n\nexport const SearchQuery: React.FC = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const handleQuery = (e: ChangeEvent<HTMLInputElement>) => {\n    const { value } = e.target;\n\n    if (value) {\n      searchParams.set('query', value);\n    } else {\n      searchParams.delete('query');\n    }\n\n    setSearchParams(searchParams);\n  };\n\n  return (\n    <div>\n      <input\n        className=\"search-query\"\n        placeholder=\"Search...\"\n        type=\"search\"\n        onChange={handleQuery}\n      />\n    </div>\n  );\n};\n","import React from 'react';\nimport { NavigationLink } from '../NavigationLink/NavigationLink';\nimport './UserNav.scss';\n\nexport const UserNav: React.FC = () => {\n  return (\n    <div className=\"user-nav\">\n      <NavigationLink to=\"/\" title=\"Home\" />\n      <NavigationLink to=\"/gallery\" title=\"Gallery\" />\n      <NavigationLink to=\"/favorite\" title=\"Favorite\" />\n    </div>\n  );\n};\n","import React, { useContext } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { UserContext } from '../../context/UserContext';\nimport { AuthNav } from '../AuthNav';\nimport { Container } from '../Container';\nimport { SearchQuery } from '../SearchQuery/SearchQuery';\nimport { UserNav } from '../UserNav';\nimport './Header.scss';\n\nexport const Header: React.FC = () => {\n  const { user } = useContext(UserContext);\n  const location = useLocation();\n  const isLocation = location.pathname === '/gallery';\n\n  return (\n    <header className=\"header\">\n      <Container>\n        <div className=\"header__content\">\n          {user && <UserNav />}\n          {!user && <div></div>}\n          {isLocation && <SearchQuery />}\n          <AuthNav />\n        </div>\n      </Container>\n    </header>\n  );\n};\n","import React from 'react';\nimport { Container } from '../../components/Container';\nimport './HomePage.scss';\n\nexport const HomePage: React.FC = () => {\n  return (\n    <div className=\"home\">\n      <Container>\n        <h1>HomePage</h1>\n      </Container>\n    </div>\n  );\n};\n","import React from 'react';\nimport { useForm, SubmitHandler } from 'react-hook-form';\nimport { useNavigate } from 'react-router-dom';\nimport { Container } from '../../components/Container';\nimport { UserRegister } from '../../types/User';\nimport { getFromLocalStorage } from '../../utils/getFromLocalStorage';\nimport { setToLocalStorage } from '../../utils/setToLocalStorage';\nimport './RegistrationPage.scss';\n\nexport const RegistrationPage: React.FC = () => {\n  const navigate = useNavigate();\n\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n  } = useForm<UserRegister>();\n  const onSubmit: SubmitHandler<UserRegister> = (data) => {\n    const users = getFromLocalStorage('users');\n\n    if (!users) {\n      setToLocalStorage('users', [data]);\n      navigate('/login');\n      // add time out, add notification about reg user\n\n      return;\n    }\n\n    const isUserRegister = users.find(\n      (user: UserRegister) => user.email === data.email || user.username === data.username,\n    );\n\n    if (isUserRegister) {\n      // eslint-disable-next-line no-alert\n      alert(\n        `User with Username: '${data.username}' or Email: '${data.email}' already exists...`,\n      );\n\n      return;\n    }\n\n    setToLocalStorage('users', [...users, data]);\n    navigate('/login');\n  };\n\n  return (\n    <div className=\"register\">\n      <Container>\n        <h1 className=\"register__title\">Registration</h1>\n        <form onSubmit={handleSubmit(onSubmit)} className=\"form\">\n          <label htmlFor=\"username\" className=\"form__label\">\n            <span className=\"form__label-text\">Username</span>\n            <input\n              className=\"form__label-input\"\n              placeholder=\"Username...\"\n              {...register('username', { required: true })}\n            />\n            {errors.username && (\n              <span className=\"form__label-error-text\">\n                This field is required\n              </span>\n            )}\n          </label>\n          <label htmlFor=\"email\" className=\"form__label\">\n            <span className=\"form__label-text\">Email</span>\n            <input\n              className=\"form__label-input\"\n              placeholder=\"Email...\"\n              type=\"email\"\n              {...register('email', { required: true })}\n            />\n            {errors.email && (\n              <span className=\"form__label-error-text\">\n                This field is required\n              </span>\n            )}\n          </label>\n          <label htmlFor=\"password\" className=\"form__label\">\n            <span className=\"form__label-text\">Password</span>\n            <input\n              className=\"form__label-input\"\n              placeholder=\"Password...\"\n              {...register('password', { required: true })}\n            />\n            {errors.password && (\n              <span className=\"form__label-error-text\">\n                This field is required\n              </span>\n            )}\n          </label>\n          <input className=\"form__submit-btn\" type=\"submit\" value=\"Register\" />\n        </form>\n      </Container>\n    </div>\n  );\n};\n","import React, { useContext } from 'react';\nimport { useForm, SubmitHandler } from 'react-hook-form';\nimport { useNavigate } from 'react-router-dom';\n\nimport { Container } from '../../components/Container';\nimport { UserContext } from '../../context/UserContext';\nimport { UserLogin, UserRegister } from '../../types/User';\nimport { getFromLocalStorage } from '../../utils/getFromLocalStorage';\nimport './LoginPage.scss';\n\nexport const LoginPage: React.FC = () => {\n  const navigate = useNavigate();\n  const { setUser } = useContext(UserContext);\n\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n  } = useForm<UserLogin>();\n  const onSubmit: SubmitHandler<UserLogin> = (data) => {\n    console.log(data);\n    const users = getFromLocalStorage('users');\n    const findUser = users.find(\n      (user: UserRegister) => user.email === data.email,\n    );\n\n    if (findUser) {\n      if (findUser.password === data.password) {\n        setUser(findUser);\n        navigate('/home');\n      } else {\n        // eslint-disable-next-line no-alert\n        alert('Password is incorrect');\n      }\n    } else {\n      // eslint-disable-next-line no-alert\n      alert('User not found');\n    }\n  };\n\n  return (\n    <div className=\"login\">\n      <Container>\n        <h1 className=\"login__title\">Login</h1>\n        <form onSubmit={handleSubmit(onSubmit)} className=\"form\">\n          <label htmlFor=\"email\" className=\"form__label\">\n            <span className=\"form__label-text\">Email</span>\n            <input\n              className=\"form__label-input\"\n              placeholder=\"Email...\"\n              type=\"email\"\n              {...register('email', { required: true })}\n            />\n            {errors.email && (\n              <span className=\"form__label-error-text\">\n                This field is required\n              </span>\n            )}\n          </label>\n          <label htmlFor=\"password\" className=\"form__label\">\n            <span className=\"form__label-text\">Password</span>\n            <input\n              className=\"form__label-input\"\n              placeholder=\"Password...\"\n              {...register('password', { required: true })}\n            />\n            {errors.password && (\n              <span className=\"form__label-error-text\">\n                This field is required\n              </span>\n            )}\n          </label>\n          <input className=\"form__submit-btn\" type=\"submit\" value=\"Login\" />\n        </form>\n      </Container>\n    </div>\n  );\n};\n","import { Photo, PhotoPreview } from '../types/Photo';\n\nconst API_KEY = process.env.REACT_APP_API_KEY;\nconst BASE_URL = 'https://api.unsplash.com';\n\nexport const getRandomPhotos = async (page = 1, query = ''): Promise<PhotoPreview[]> => {\n  const fetchURL = `${BASE_URL}/${query && 'search/'}photos/?client_id=${API_KEY}&page=${page}&per_page=15${query && `&query=${query}`}`;\n\n  const data = await fetch(fetchURL);\n  const photos: Photo[] = await data.json();\n\n  return photos.map((photo: Photo) => ({\n    id: photo.id,\n    alt_description: photo.alt_description,\n    created_at: photo.created_at,\n    description: photo.description,\n    urls: {\n      regular: photo.urls.regular,\n      thumb: photo.urls.thumb,\n    },\n  }));\n};\n","import React from 'react';\nimport { PhotoPreview } from '../../types/Photo';\nimport './GalleryItem.scss';\n\ntype Props = {\n  photo: PhotoPreview;\n  handleImage: (photo: PhotoPreview) => void;\n  handleFavorite: (photo: PhotoPreview) => void;\n};\n\nexport const GalleryItem: React.FC<Props> = ({\n  photo,\n  handleImage,\n  handleFavorite,\n}) => {\n  const { urls, description } = photo;\n\n  return (\n    <div className=\"gallery-card-wrapper\">\n      <button\n        type=\"button\"\n        className=\"gallery-card\"\n        onClick={() => handleImage(photo)}\n      >\n        <img className=\"gallery-image\" src={urls.regular} alt={description} />\n      </button>\n      <button\n        className=\"favorite-btn\"\n        type=\"button\"\n        onClick={() => handleFavorite(photo)}\n      >\n        {/* {  ? ❤️: 🤍} */}\n        🤍\n      </button>\n    </div>\n  );\n};\n","import React, { MouseEvent, useEffect } from 'react';\nimport ReactDOM from 'react-dom';\nimport { PhotoPreview } from '../../types/Photo';\nimport './Modal.scss';\n\ntype Props = {\n  onClose: () => void;\n  modalImage: PhotoPreview | null;\n};\n\nexport const Modal: React.FC<Props> = ({ onClose, modalImage }) => {\n  const mouseDownClose = (e: MouseEvent) => {\n    if (e.target === e.currentTarget) {\n      onClose();\n    }\n  };\n\n  useEffect(() => {\n    const keyDownClose = (e: KeyboardEvent) => {\n      if (e.code === 'Escape') {\n        onClose();\n      }\n    };\n\n    window.addEventListener('keydown', keyDownClose);\n\n    return () => {\n      window.removeEventListener('keydown', keyDownClose);\n    };\n  }, [onClose]);\n\n  return ReactDOM.createPortal(\n    // eslint-disable-next-line max-len\n    // eslint-disable-next-line jsx-a11y/no-static-element-interactions, jsx-a11y/click-events-have-key-events\n    <div className=\"overlay\" onClick={mouseDownClose}>\n      <div className=\"popup\">\n        <img\n          style={{\n            width: '100%',\n            height: '100%',\n          }}\n          src={modalImage?.urls.regular}\n          alt=\"#\"\n        />\n        <div className=\"image-info\">\n          <p>{modalImage?.description}</p>\n          <p>{modalImage?.created_at}</p>\n        </div>\n      </div>\n    </div>,\n    document.querySelector('#modal-root') as Element,\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport StackGrid from 'react-stack-grid';\nimport { PhotoPreview } from '../../types/Photo';\nimport { GalleryItem } from '../GalleryItem/GalleryItem';\nimport { getFromLocalStorage } from '../../utils/getFromLocalStorage';\nimport { setToLocalStorage } from '../../utils/setToLocalStorage';\nimport { Modal } from '../Modal';\nimport './Gallery.scss';\n\ntype Props = {\n  photos: PhotoPreview[];\n};\n\nexport const Gallery: React.FC<Props> = ({ photos }) => {\n  const [modal, setModal] = useState(false);\n  const [modalImage, setModalImage] = useState<PhotoPreview | null>(null);\n  const { email } = getFromLocalStorage('activeUser');\n  const [userPhotos, setUserPhotos] = useState(\n    getFromLocalStorage(`${email}`) || [],\n  );\n\n  const handleClose = () => {\n    setModal(false);\n  };\n\n  const handleActive = (data: PhotoPreview) => {\n    setModal(true);\n    setModalImage(data);\n  };\n\n  const handlerFavorite = (image: PhotoPreview) => {\n    const findDublicat = userPhotos.find(\n      (el: PhotoPreview) => el.id === image.id,\n    );\n\n    if (userPhotos.length === 0) {\n      setUserPhotos([...userPhotos, image]);\n    }\n\n    if (findDublicat) {\n      // eslint-disable-next-line no-alert\n      alert('Image exist in favorite list');\n\n      return;\n    }\n\n    setUserPhotos([...userPhotos, image]);\n  };\n\n  useEffect(() => {\n    setToLocalStorage(`${email}`, userPhotos);\n  }, [userPhotos]);\n\n  return (\n    <>\n      <StackGrid\n        duration={0}\n        columnWidth={200}\n        gutterWidth={10}\n        gutterHeight={10}\n        component=\"div\"\n      >\n        {photos.map((photo) => (\n          <GalleryItem\n            key={photo.id}\n            photo={photo}\n            handleImage={handleActive}\n            handleFavorite={handlerFavorite}\n          />\n        ))}\n      </StackGrid>\n      {modal && <Modal onClose={handleClose} modalImage={modalImage} />}\n    </>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport InfiniteScroll from 'react-infinite-scroll-component';\nimport { useSearchParams } from 'react-router-dom';\n// import { useSearchParams } from 'react-router-dom';\nimport { getRandomPhotos } from '../../api/images';\nimport { Container } from '../../components/Container';\nimport { Gallery } from '../../components/Gallery';\nimport { PhotoPreview } from '../../types/Photo';\nimport './GalleryPage.scss';\n\nexport const GalleryPage: React.FC = () => {\n  const [photos, setPhotos] = useState<PhotoPreview[]>([]);\n  const [page, setPage] = useState(1);\n  const [hasMore, setHasMore] = useState(false);\n\n  const [searchQuery, setsearchQuery] = useState('');\n  const [searchParams] = useSearchParams();\n  const query = searchParams.get('query') || '';\n\n  const fetchMorePhotos = async () => {\n    setHasMore(true);\n    try {\n      const data = await getRandomPhotos(page, searchQuery);\n\n      if (data.length === 0) {\n        setHasMore(false);\n\n        return;\n      }\n\n      setPhotos((prevPhotos) => [...prevPhotos, ...data]);\n      setPage((prevPage) => prevPage + 1);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    fetchMorePhotos();\n  }, []);\n\n  useEffect(() => {\n    fetchMorePhotos();\n  }, [searchQuery]);\n\n  useEffect(() => {\n    const delayInputTimeoutId = setTimeout(() => {\n      setsearchQuery(query);\n      setPage(1);\n    }, 500);\n\n    return () => clearTimeout(delayInputTimeoutId);\n  }, [query, 500]);\n\n  return (\n    <div className=\"gallery\">\n      <Container>\n        <InfiniteScroll\n          style={{ overflow: 'hidden' }}\n          dataLength={photos.length}\n          next={fetchMorePhotos}\n          hasMore={hasMore}\n          loader={<h4>Loading...</h4>}\n        >\n          <Gallery photos={photos} />\n        </InfiniteScroll>\n      </Container>\n    </div>\n  );\n};\n","import React from 'react';\nimport { Container } from '../../components/Container';\nimport { Gallery } from '../../components/Gallery';\nimport { getFromLocalStorage } from '../../utils/getFromLocalStorage';\nimport './FavoritePage.scss';\n\nexport const FavoritePage: React.FC = () => {\n  const { email } = getFromLocalStorage('activeUser');\n  const userPhotos = getFromLocalStorage(`${email}`);\n\n  return (\n    <div className=\"favorite\">\n      <Container>\n        <Gallery photos={userPhotos} />\n      </Container>\n    </div>\n  );\n};\n","import React from 'react';\nimport { Container } from '../../components/Container';\nimport './NotFoundPage.scss';\n\nexport const NotFoundPage: React.FC = () => {\n  return (\n    <div className=\"not-found\">\n      <Container>\n        <h1>NotFoundPage</h1>\n      </Container>\n    </div>\n  );\n};\n","import React, { useContext } from 'react';\nimport { Navigate } from 'react-router-dom';\nimport { UserContext } from '../../context/UserContext';\n\ntype Props = {\n  children: JSX.Element;\n};\n\nexport const ProtectedRoute: React.FC<Props> = ({ children }) => {\n  const { user } = useContext(UserContext);\n\n  if (user) {\n    return children;\n  }\n\n  return <Navigate to=\"/register\" />;\n};\n","import React from 'react';\nimport { Routes, Route, Navigate } from 'react-router-dom';\nimport { Header } from './components/Header';\nimport { HomePage } from './Pages/HomePage';\nimport { RegistrationPage } from './Pages/RegistrationPage';\nimport { LoginPage } from './Pages/LoginPage';\nimport { GalleryPage } from './Pages/GalleryPage';\nimport { FavoritePage } from './Pages/FavoritePage';\nimport { NotFoundPage } from './Pages/NotFoundPage';\nimport './App.scss';\nimport { ProtectedRoute } from './components/ProtectedRoute/ProtectedRoute';\n\nexport const App: React.FC = () => {\n  return (\n    <div className=\"app\">\n      <Header />\n      <main className=\"main\">\n        <Routes>\n          <Route\n            path=\"/\"\n            element={(\n              <ProtectedRoute>\n                <HomePage />\n              </ProtectedRoute>\n            )}\n          />\n          <Route path=\"/home\" element={<Navigate to=\"/\" replace />} />\n          <Route path=\"/register\" element={<RegistrationPage />} />\n          <Route path=\"/login\" element={<LoginPage />} />\n          <Route\n            path=\"/gallery\"\n            element={(\n              <ProtectedRoute>\n                <GalleryPage />\n              </ProtectedRoute>\n            )}\n          />\n          <Route\n            path=\"/favorite\"\n            element={(\n              <ProtectedRoute>\n                <FavoritePage />\n              </ProtectedRoute>\n            )}\n          />\n          <Route path=\"*\" element={<NotFoundPage />} />\n        </Routes>\n      </main>\n    </div>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport { UserProvider } from './context/UserContext';\nimport { App } from './App';\nimport './index.scss';\n\nReactDOM.render(\n  <HashRouter>\n    <UserProvider>\n      <App />\n    </UserProvider>\n  </HashRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}